{"version":3,"sources":["components/Clock/index.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerId","this","window","setInterval","newDate","setState","console","info","toUTCString","slice","clearInterval","clockName","props","className","React","Component","getRandomName","value","now","toString","App","hasClock","handleHideClock","event","preventDefault","handleShowClock","document","addEventListener","_","prevState","debug","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAe,CACbC,MAAO,IAAIC,MAFf,EAKEC,aALF,yDAOE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAMC,EAAU,IAAIL,KAEpB,EAAKM,SAAS,CAAEP,MAAOM,IAEvBE,QAAQC,KAAK,EAAKV,MAAMC,MAAMU,cAAcC,OAAO,IAAK,MACvD,OAdP,kCAiBE,WACEP,OAAOQ,cAAcT,KAAKD,WAlB9B,oBAqBE,WACE,IAAQF,EAAUG,KAAKJ,MAAfC,MACAa,EAAcV,KAAKW,MAAnBD,UAER,OACE,sBAAKE,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGF,IAGF,YAED,sBAAME,UAAU,cAAhB,SACGf,EAAMU,cAAcC,OAAO,IAAK,YAlC3C,GAA2BK,IAAMC,WCNjC,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWV,OAAO,GAE3C,MAAM,SAAN,OAAgBQ,GAUX,IAAMG,EAAb,4MACEvB,MAAe,CACbc,UAAW,UACXU,UAAU,GAHd,EAMErB,aANF,IA8BEsB,gBAAkB,SAACC,GACjBA,EAAMC,iBAEN,EAAKnB,SAAS,CAAEgB,UAAU,KAjC9B,EAoCEI,gBAAkB,WAChB,EAAKpB,SAAS,CAAEgB,UAAU,KArC9B,uDAQE,WAA2B,IAAD,OACxBK,SAASC,iBAAiB,cAAe1B,KAAKqB,iBAC9CI,SAASC,iBAAiB,QAAS1B,KAAKwB,iBAExCxB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKE,SAAS,CAAEM,UAAWK,QAC1B,QAdP,gCAiBE,SAAmBY,EAAoBC,GACjCA,EAAUlB,YAAcV,KAAKJ,MAAMc,WAAaV,KAAKJ,MAAMwB,UAE7Df,QAAQwB,MAAR,uBAA8BD,EAAUlB,UAAxC,eAAwDV,KAAKJ,MAAMc,cApBzE,kCAwBE,WACEe,SAASK,oBAAoB,cAAe9B,KAAKqB,iBACjDI,SAASK,oBAAoB,QAAS9B,KAAKwB,iBAC3CvB,OAAOQ,cAAcT,KAAKD,WA3B9B,oBAwCE,WACE,OACE,sBAAKa,UAAU,MAAf,UACE,6CACCZ,KAAKJ,MAAMwB,UACV,cAAC,EAAD,CACEV,UAAWV,KAAKJ,MAAMc,mBA9ClC,GAAyBG,IAAMC,WCd/BiB,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.6571d534.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  clockName: string\n};\n\ntype State = {\n  today: Date,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    today: new Date(),\n  };\n\n  timerId?: number;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      const newDate = new Date();\n\n      this.setState({ today: newDate });\n      // eslint-disable-next-line no-console\n      console.info(this.state.today.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  render(): React.ReactNode {\n    const { today } = this.state;\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype Props = any;\n\ninterface State {\n  clockName: string,\n  hasClock: boolean,\n}\n\nexport class App extends React.Component<Props, State> {\n  state: State = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId?: number;\n\n  componentDidMount(): void {\n    document.addEventListener('contextmenu', this.handleHideClock);\n    document.addEventListener('click', this.handleShowClock);\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentDidUpdate(_: Readonly<Props>, prevState: Readonly<State>): void {\n    if (prevState.clockName !== this.state.clockName && this.state.hasClock) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('contextmenu', this.handleHideClock);\n    document.removeEventListener('click', this.handleShowClock);\n    window.clearInterval(this.timerId);\n  }\n\n  handleHideClock = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({ hasClock: false });\n  };\n\n  handleShowClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.hasClock && (\n          <Clock\n            clockName={this.state.clockName}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}