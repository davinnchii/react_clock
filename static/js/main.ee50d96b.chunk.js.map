{"version":3,"sources":["components/Clock/index.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerId","this","window","setInterval","newDate","setState","console","info","toUTCString","slice","prevProps","oldClockName","clockName","currentClockName","props","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","handleHideClock","event","preventDefault","handleShowClock","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAe,CACbC,MAAO,IAAIC,MAFf,EAKEC,aALF,yDAOE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAMC,EAAU,IAAIL,KAEpB,EAAKM,SAAS,CAAEP,MAAOM,IAEvBE,QAAQC,KAAK,EAAKV,MAAMC,MAAMU,cAAcC,OAAO,IAAK,MACvD,OAdP,gCAiBE,SAAmBC,GACjB,IAAmBC,EAAiBD,EAA5BE,UACWC,EAAqBZ,KAAKa,MAArCF,UAEJD,IAAiBE,GAEnBP,QAAQS,MAAR,uBAA8BJ,EAA9B,eAAiDE,MAvBvD,kCA2BE,WACEX,OAAOc,cAAcf,KAAKD,WA5B9B,oBA+BE,WACE,IAAQF,EAAUG,KAAKJ,MAAfC,MACAc,EAAcX,KAAKa,MAAnBF,UAER,OACE,sBAAKK,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGL,IAGF,YAED,sBAAMK,UAAU,cAAhB,SACGnB,EAAMU,cAAcC,OAAO,IAAK,YA5C3C,GAA2BS,IAAMC,WCNjC,SAASC,IACP,IAAMC,EAAQtB,KAAKuB,MAAMC,WAAWd,OAAO,GAE3C,MAAM,SAAN,OAAgBY,GAUX,IAAMG,EAAb,4MACE3B,MAAe,CACbe,UAAW,UACXa,UAAU,GAHd,EAMEzB,aANF,IAuBE0B,gBAAkB,SAACC,GACjBA,EAAMC,iBAEN,EAAKvB,SAAS,CAAEoB,UAAU,KA1B9B,EA6BEI,gBAAkB,WAChB,EAAKxB,SAAS,CAAEoB,UAAU,KA9B9B,uDAQE,WAA2B,IAAD,OACxBK,SAASC,iBAAiB,cAAe9B,KAAKyB,iBAC9CI,SAASC,iBAAiB,QAAS9B,KAAK4B,iBAExC5B,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKE,SAAS,CAAEO,UAAWQ,QAC1B,QAdP,kCAiBE,WACEU,SAASE,oBAAoB,cAAe/B,KAAKyB,iBACjDI,SAASE,oBAAoB,QAAS/B,KAAK4B,iBAC3C3B,OAAOc,cAAcf,KAAKD,WApB9B,oBAiCE,WACE,MAAgCC,KAAKJ,MAA7B4B,EAAR,EAAQA,SAAUb,EAAlB,EAAkBA,UAElB,OACE,sBAAKK,UAAU,MAAf,UACE,6CACCQ,GACC,cAAC,EAAD,CACEb,UAAWA,WAzCvB,GAAyBM,IAAMC,WCd/Bc,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.ee50d96b.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  clockName: string\n};\n\ntype State = {\n  today: Date,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    today: new Date(),\n  };\n\n  timerId?: number;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      const newDate = new Date();\n\n      this.setState({ today: newDate });\n      // eslint-disable-next-line no-console\n      console.info(this.state.today.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    const { clockName: oldClockName } = prevProps;\n    const { clockName: currentClockName } = this.props;\n\n    if (oldClockName !== currentClockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${oldClockName} to ${currentClockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  render(): React.ReactNode {\n    const { today } = this.state;\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype Props = {};\n\ninterface State {\n  clockName: string,\n  hasClock: boolean,\n}\n\nexport class App extends React.Component<Props, State> {\n  state: State = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId?: number;\n\n  componentDidMount(): void {\n    document.addEventListener('contextmenu', this.handleHideClock);\n    document.addEventListener('click', this.handleShowClock);\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('contextmenu', this.handleHideClock);\n    document.removeEventListener('click', this.handleShowClock);\n    window.clearInterval(this.timerId);\n  }\n\n  handleHideClock = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({ hasClock: false });\n  };\n\n  handleShowClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && (\n          <Clock\n            clockName={clockName}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}